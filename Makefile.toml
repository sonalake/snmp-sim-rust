[config]
default_to_workspace = false
additional_profiles = [
  "all-default-tasks",
  "docs-all-modification-tasks",
  "ci-coverage-tasks",
  "ci-all-build-tasks",
  "ci-static-code-analysis-tasks",
  "publish-pre-cleanup",
]

[env]
#CARGO_MAKE_COVERAGE_PROVIDER = "tarpaulin"
# CARGO_MAKE_TEST_COVERAGE_DEFAULT_BINARY_FILTER  = "snmp_sim_api_tests-[a-z0-9]*$"
# CARGO_MAKE_TEST_COVERAGE_BINARY_FILTER = "${CARGO_MAKE_TEST_COVERAGE_DEFAULT_BINARY_FILTER}"

[tasks.audit]
ignore_errors = true

[tasks.install-openapi]
condition = { files_not_exist = ["~/.local/bin/openapi-generator"] }
script = '''
sudo apt update && sudo apt install -y python3 python3-pip protobuf-compiler openjdk-11-jre-headless curl maven jq
pip3 install yq
mkdir -p ~/.local/bin/
curl https://raw.githubusercontent.com/OpenAPITools/openapi-generator/master/bin/utils/openapi-generator-cli.sh > ~/.local/bin/openapi-generator
chmod u+x ~/.local/bin/openapi-generator
'''

[tasks.format]
description = "Runs the cargo rustfmt plugin."
toolchain = "nightly"
command = "cargo"
args = ["fmt", "--all", "--check"]

[tasks.lint]
description = "Runs the cargo clippy plugin."
script = '''
#!/usr/bin/env bash -eux
cargo clippy --workspace --all-targets --all-features -- -D clippy::all
'''

[tasks.coverage]
# clear = true
# command = "cargo"
# args = ["tarpaulin", "--ignore-tests", "--follow-exec", "--forward", "--workspace", "--exclude", "snmp-sim-cli", "--exclude-files", "clients/rust*", "--out", "Xml"]

[tasks.rust-client]
command = "make"
args = ["rust-client"]

[tasks.db-entity]
description = "Generates DB entity model and stores in location"
script = '''
sea-orm-cli generate entity -o ./src/data_access/entity
gsed -i 's/DateTime/DateTimeUtc/g' ./src/data_access/entity/*.rs
'''

[tasks.db-entity.mac]
script = '''
sea-orm-cli generate entity -o ./src/data_access/entity
gsed -i 's/DateTime/DateTimeUtc/g' ./src/data_access/entity/*.rs
'''
