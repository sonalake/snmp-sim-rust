name: CI
on:
  pull_request:
    types:
      - opened
      - synchronize
  push:
    branches:
      - main
      - feature/*
  workflow_dispatch:

env:
  CLICOLOR_FORCE: 1
  RUST_BACKTRACE: all

jobs:
  ci:
    name: CI
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        rust: [stable]
        #, beta, nightly, 1.56.0
        os: [ubuntu-latest]
        #, windows-latest, macOS-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true

      - name: Install NPM
        uses: actions/setup-node@v3
        with:
          node-version: "14"
          cache: "npm"

      - name: Install OpenAPI Generator
        run: npm install @openapitools/openapi-generator-cli -g

      - name: Install cargo-make
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-make --force
      - name: Run CI
        if: matrix.rust == 'stable' || matrix.rust == 'beta'
        uses: actions-rs/cargo@v1
        with:
          command: make
          args: ci-flow
      - name: Run CI (Allow Failures)
        if: matrix.rust == 'nightly'
        continue-on-error: true
        uses: actions-rs/cargo@v1
        with:
          command: make
          args: ci-flow
      - name: Run CI (Minimal Supported Rust Version)
        if: matrix.rust != 'stable' && matrix.rust != 'beta' && matrix.rust != 'nightly' && matrix.os == 'ubuntu-latest'
        uses: actions-rs/cargo@v1
        with:
          command: make
          args: ci-flow
